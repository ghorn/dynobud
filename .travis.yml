# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - CABALVER=1.18 GHCVER=7.8.3
# - CABALVER=1.22 GHCVER=7.10.1

# Note: the distinction between `before_install` and `install` is not important.
before_install:
   # ghc/cabal
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

   # zeromq 4
 - travis_retry sudo add-apt-repository -y ppa:chris-lea/zeromq
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install libzmq3-dev=4.0.5-1chl1~precise1

   # some dependencies
 - travis_retry sudo apt-get install -qq pkg-config libglpk-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev libglib2.0-dev libcairo2-dev libpango1.0-dev libgtk2.0-dev libgsl0-dev liblapack-dev libblas-dev

   # casadi from source:
 - travis_retry sudo apt-get install -qq gcc g++ gfortran git cmake coinor-libipopt-dev libmumps-dev libmumps-seq-dev
 - cd ..
 - git clone https://github.com/casadi/casadi.git
 - cd casadi
 - mkdir build
 - cd build
 - cmake -DCMAKE_INSTALL_PREFIX=~/casadi_install ..
 - make
 - make install
 - export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:~/casadi_install/lib/pkgconfig
 - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/casadi_install/lib
 - cd ../../dynobud

#   # casadi from .deb
# - wget http://github.com/casadi/casadi/releases/download/2.2.0/libcasadi-shared-2.2.0-x86_64.deb
# - sudo dpkg -i libcasadi-shared-2.2.0-x86_64.deb
# - sudo apt-get install -f
# - rm libcasadi-shared-2.2.0-x86_64.deb


install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install alex
 - cabal install happy
 - cabal install gtk2hs-buildtools
 - cabal install --only-dependencies -fexamples --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure -fexamples --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
# - cabal check # complains about -O2
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
