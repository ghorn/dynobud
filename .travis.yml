language: c

# explicitly request container-based infrastructure
sudo: false

matrix:
  include:
    - env: CABALVER=1.22 GHCVER=7.8.4
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.2
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.2],sources: [hvr-ghc]}}

  allow_failures:
     - env: CABALVER=1.22 GHCVER=7.8.4

env:
  global:
    - secure: "kbkJf+ukAlZMIcbTD/jIGt6p51nkm2VERZ7jHKQ0betHPyQtBz7Ly43bge4oggRP6s9cDoobFSMendQHTuV5Kyv+BHnQTBpReryOzFMqP3Bm0ZGlZzbn+v2Z1HisDIHGK2kLk3iQyO4S8+Pc/yqbJYVf4iUxh+tUoB11/aCmE3k="
    - IPOPT_DEFAULT_LINEAR_SOLVER=ma57
    - LD_LIBRARY_PATH=/home/travis/build/libhsl

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
# blocked by https://github.com/travis-ci/apt-source-whitelist/issues/149
#            https://github.com/travis-ci/apt-source-whitelist/pull/150
#    - chris-lea/zeromq

    packages:
    - pkg-config
    - libglpk-dev
    - libgl1-mesa-dev
    - libglu1-mesa-dev
    - freeglut3-dev
    - libglib2.0-dev
    - libcairo2-dev
    - libpango1.0-dev
    - libgtk2.0-dev
    - libgsl0-dev
    - liblapack-dev
    - libblas-dev
    - coinor-libipopt-dev
    - libmumps-dev
    - libmumps-seq-dev
    - gcc-4.8
    - happy-1.19.4
    - alex-3.1.3
    - gcc
    - g++
    - gfortran
    - git
    - cmake
# blocked by https://github.com/travis-ci/apt-source-whitelist/issues/149
#            https://github.com/travis-ci/apt-source-whitelist/pull/150
#    - libzmq3-dev=4.0.5-1chl1~precise1


before_install:
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH
   # hsl linear solvers
 - pushd ../../ && git clone https://github.com/casadi/testbot.git
 - pushd testbot && recipes/setup.sh && popd
 - travis_retry testbot/recipes/fetch.sh libhsl.tar.gz && mkdir libhsl && tar -xvf libhsl.tar.gz -C libhsl
 - mkdir -p /home/travis/build/casadi/testbot
 - ls -al
 - popd

   # casadi from source:
 - cd ..
 - git clone https://github.com/casadi/casadi.git
 - cd casadi
 - mkdir build
 - cd build
 - cmake -DCMAKE_INSTALL_PREFIX=~/casadi_install -DWITH_EXAMPLES=OFF ..
 - make -j4
 - make install
 - export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:~/casadi_install/lib/pkgconfig
 - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/casadi_install/lib
 - cd ../../dynobud
#   # casadi from .deb
## - wget http://github.com/casadi/casadi/releases/download/2.2.0/libcasadi-shared-2.2.0-x86_64.deb
# - wget http://sourceforge.net/projects/casadi/files/CasADi/2.3.0/linux/libcasadi-v2.3.0.deb
# - sudo dpkg -i libcasadi-v2.3.0.deb
# - sudo apt-get install -f
# - rm libcasadi-v2.3.0.deb


install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - travis_retry cabal install gtk2hs-buildtools -j2
 - for pkg in $(ghc-pkg list --user); do ghc-pkg unregister --force ${pkg}; done
 - travis_retry cabal install --only-dependencies -fexamples --enable-tests --enable-benchmarks -j2 --with-gcc=gcc-4.8

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure -fexamples --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build -j2  # this builds all libraries and executables (including tests/benchmarks)
 - cabal test --show-details=always
# - cabal check # complains about -O2
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
