name:                dynobud
version:             0.1.0.0
synopsis:            your dynamic optimization buddy
-- description:
license:             LGPL-3
license-file:        LICENSE
author:              Greg Horn
maintainer:          gregmainland@gmail.com
copyright:           (c) Greg Horn 2013-2014
category:            Science
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10

library
  exposed-modules:     Dyno.LagrangePolynomials
                       Dyno.TypeVecs
                       Dyno.Nats
--                       Dyno.MultipleShooting
                       Dyno.Dae
                       Dyno.Models.Aircraft
                       Dyno.Models.AeroCoeffs
                       Dyno.Models.Betty
                       Dyno.Ocp
                       Dyno.DirectCollocation
                       Dyno.DirectCollocation.Types
                       Dyno.DirectCollocation.Formulate
                       Dyno.DirectCollocation.Reify
                       Dyno.DirectCollocation.Dynamic
                       Dyno.DirectCollocation.Quadratures
                       Dyno.DirectCollocation.Profile
                       Dyno.Cov
                       Dyno.View
                       Dyno.Vectorize
                       Dyno.Nlp
                       Dyno.NlpMonad
                       Dyno.OcpMonad
                       Dyno.Interface.LogsAndErrors
                       Dyno.Interface.Types
                       Dyno.NlpSolver
                       Dyno.Solvers
                       Dyno.Casadi.SharedObject
                       Dyno.Casadi.Callback
                       Dyno.Casadi.Option
                       Dyno.Casadi.IOSchemes
                       Dyno.Casadi.Overloading
                       Dyno.Casadi.MX
                       Dyno.Casadi.SX
                       Dyno.Casadi.MXFunction
                       Dyno.Casadi.SXFunction
                       Dyno.Casadi.Function
                       Dyno.Casadi.SXElement
                       Dyno.Casadi.DMatrix
--                       Dyno.Sqp.Sqp
--                       Dyno.Sqp.LineSearch
                       Dyno.Server.Accessors
                       Dyno.Server.GraphWidget
                       Dyno.Server.PlotChart
                       Dyno.Server.PlotTypes
                       Dyno.Server.Server

  other-modules:       Dyno.View.Fun
                       Dyno.View.Symbolic
                       Dyno.View.View
                       Dyno.View.Viewable
                       Dyno.View.NumInstances

  build-depends:       base >=4.6 && <4.8,
                       vector >=0.10,
                       mtl >=2.1,
                       containers >=0.5,
                       jacobi-roots >=0.2 && <0.3,
                       hmatrix,
                       unordered-containers >=0.2,
                       casadi-bindings-internal,
                       casadi-bindings-core >= 1.9.0.5,
                       transformers >=0.3,
                       primitive >=0.5 && <0.6,
                       ghc-prim >=0.3 && <0.4,
                       linear >= 1.3.1.1,
                       tagged >= 0.6,
                       reflection >= 1.3.2,
                       lens,
                       cereal,
                       glib,
                       time,
                       stm,
                       gtk >= 0.13,
                       Chart-cairo,
                       Chart,
                       data-default-class,
                       distributive,
                       text
--                       cplex
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -O2
--  ghc-options:         -O2 -rtsopts
  ghc-prof-options:    -O2 -prof -fprof-auto -fprof-cafs -fprof-auto-calls

flag examples
    description:    build the examples
    default:        False

executable vec
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Vec.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && <4.8

  ghc-options:         -threaded -O2

executable ocpMonad
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             OcpM.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && <4.8,
                       zeromq4-haskell,
                       cereal,
                       bytestring

  ghc-options:         -threaded -O2

executable rocket
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Rocket.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && <4.8,
                       zeromq4-haskell,
                       cereal,
                       bytestring

  ghc-options:         -threaded -O2

executable staticExample
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             StaticExample.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && <4.8
  ghc-options:         -threaded -O2

executable basic
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Basic.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && <4.8
  ghc-options:         -threaded -O2

executable basicJ
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             BasicJ.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && <4.8
  ghc-options:         -threaded -O2

executable daeColl
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             DaeColl.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && <4.8,
                       vector
  ghc-options:         -threaded -O2

executable glider
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Glider.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && <4.8,
                       containers,
                       linear,
                       bytestring,
                       cereal,
                       vector,
                       zeromq4-haskell
  ghc-options:         -threaded -O2

executable dynoplot
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Plotter.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && <4.8,
                       containers,
                       vector,
                       cereal,
                       bytestring,
                       zeromq4-haskell,
                       cmdargs
  ghc-options:         -O2

--test-suite lp_tests
--  type: exitcode-stdio-1.0
--  hs-source-dirs:      tests
--  main-is:             OldTests.hs
--  default-language:    Haskell2010
--  build-depends:       dynobud,
--                       vector,
--                       linear,
--                       hmatrix-glpk,
--                       QuickCheck >= 2,
--                       HUnit,
--                       test-framework,
--                       test-framework-hunit,
--                       test-framework-quickcheck2,
--                       base >=4.6 && <4.8
--  ghc-options:         -O2

test-suite unit-tests
  type: exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             UnitTests.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       QuickCheck >= 2,
                       HUnit,
                       test-framework,
                       test-framework-hunit,
                       test-framework-quickcheck2,
                       hmatrix,
                       hmatrix-glpk,
                       vector,
                       linear,
                       MemoTrie,
                       base >=4.6 && <4.8
--  ghc-options:         -O2

--:set -isrc -iexamples -iexamples/CovSpring
--:set -i../examples -i../examples/CovSpring -i../../src
