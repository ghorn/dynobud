name:                dynobud
version:             1.7.1.0
synopsis:            your dynamic optimization buddy
description:         See readme at <http://www.github.com/ghorn/dynobud http://www.github.com/ghorn/dynobud>
license:             LGPL-3
license-file:        LICENSE
author:              Greg Horn
maintainer:          gregmainland@gmail.com
copyright:           (c) Greg Horn 2013-2015
category:            Science
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:  README.md
stability:           Experimental

source-repository head
  type:     git
  location: git://github.com/ghorn/dynobud.git

library
  exposed-modules:     Dyno.AutoScaling
                       Dyno.FormatTime
                       Dyno.LagrangePolynomials
                       Dyno.TypeVecs
                       Dyno.MultipleShooting
                       Dyno.SimpleOcp
                       Dyno.Ocp
                       Dyno.OcpHomotopy
                       Dyno.DirectCollocation.ActiveConstraints
                       Dyno.DirectCollocation.Dynamic
                       Dyno.DirectCollocation.Export
                       Dyno.DirectCollocation.Formulate
                       Dyno.DirectCollocation.FormulateCov
                       Dyno.DirectCollocation.Integrate
                       Dyno.DirectCollocation.Interpolate
                       Dyno.DirectCollocation.Quadratures
                       Dyno.DirectCollocation.Robust
                       Dyno.DirectCollocation.Types
                       Dyno.Integrate
                       Dyno.View.Cov
--                       Dyno.View.CustomFunction
                       Dyno.View.Fun
                       Dyno.View.FunJac
                       Dyno.View.HList
                       Dyno.View.JV
                       Dyno.View.JVec
                       Dyno.View.M
                       Dyno.View.Scheme
                       Dyno.View.Symbolic
                       Dyno.View.Unsafe.View
                       Dyno.View.Unsafe.M
                       Dyno.View.View
                       Dyno.View.Viewable
                       Dyno.Vectorize
                       Dyno.Nlp
                       Dyno.NlpScaling
                       Dyno.NlpSolver
                       Dyno.NlpUtils
                       Dyno.Solvers
                       Dyno.SolverInternal
--                       Dyno.Sqp.Sqp
--                       Dyno.Sqp.LineSearch

  other-modules:

  build-depends:       base >=4.6 && < 5,
                       casadi-bindings-core >= 2.3.0.0,
                       casadi-bindings >= 2.3.0.0,
--                       casadi-bindings-internal,
                       jacobi-roots >=0.2 && <0.3,
                       spatial-math >= 0.2.1.0,
                       vector >=0.10,
                       vector-binary-instances,
                       mtl >=2.2.1,
                       containers >=0.5,
                       hmatrix >= 0.17.0.1,
                       hmatrix-gsl >= 0.17.0.0,
                       linear >= 1.3.1.1,
                       reflection >= 1.3.2,
                       aeson,
                       binary,
                       cereal,
                       distributive,
                       process,
                       Plot-ho-matic >= 0.5.0.2,
                       generic-accessors >= 0.4.2.0,
                       time,
                       directory
--                       cplex
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall
--  ghc-options:         -O2 -rtsopts
  ghc-prof-options:    -O2 -Wall -prof -fprof-auto -fprof-cafs -fprof-auto-calls

flag examples
    description:    build the examples
    default:        False

executable nlp-solver
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             NlpSolverEx.hs
  default-language:    Haskell2010
  build-depends:       dynobud
                       , base >=4.6 && < 5
                       , casadi-bindings
  ghc-options:         -O2

executable toy-ocp
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             ToyOcp.hs
  default-language:    Haskell2010
  build-depends:       dynobud
                       , base >=4.6 && < 5
  ghc-options:         -O2


executable multiple_shooting
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             MultipleShooting.hs
  default-language:    Haskell2010
  build-depends:       dynobud
                       , base >=4.6 && < 5
                       , casadi-bindings
                       , vector
                       , linear
                       , Chart >= 1.3.3
                       , Chart-gtk >= 1.3.3
                       , lens
                       , colour
                       , data-default-class
  ghc-options:         -O2


executable sofa-viz-2000
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             SofaVisualizer.hs
  other-modules:       Sofa.Common
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       not-gloss >= 0.7.4.0,
                       stm,
                       containers,
--                       binary,
                       cereal,
                       linear,
                       bytestring,
                       zeromq4-haskell,
                       vector
  ghc-options:         -O2 -threaded

executable sofa-expand-o-matic
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             SofaExpando.hs
  other-modules:       Sofa.Common
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector,
                       casadi-bindings-core,
                       zeromq4-haskell,
                       bytestring,
--                       binary,
                       cereal,
                       linear,
                       base >= 4.6 && < 5
  ghc-options:         -threaded -O2

executable homotopy
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Homotopy.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector,
                       casadi-bindings,
                       base >= 4.6 && < 5
  ghc-options:         -threaded -O2

executable vec
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Vec.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && < 5

  ghc-options:         -threaded -O2

executable spring
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Spring.hs
  default-language:    Haskell2010
  build-depends:       base >=4.6 && < 5
                     , dynobud
                     , casadi-bindings
                     , vector
                     , generic-accessors
                     , bytestring
                     , zeromq4-haskell
--                     , binary
                     , cereal
  ghc-options:         -threaded -O2

executable rocket
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Rocket.hs
  default-language:    Haskell2010
  build-depends:       base >=4.6 && < 5
                     , dynobud
                     , casadi-bindings
                     , vector
                     , generic-accessors
                     , bytestring
                     , zeromq4-haskell
--                     , binary
                     , cereal

  ghc-options:         -threaded -O2

executable nlpDsl
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             NlpDsl.hs
  other-modules:       ExampleDsl.NlpMonad
                       ExampleDsl.LogsAndErrors
                       ExampleDsl.Types
  default-language:    Haskell2010
  build-depends:       base >=4.6 && < 5
                     , dynobud
                     , casadi-bindings
                     , vector
                     , linear
                     , containers
                     , unordered-containers
                     , lens
                     , mtl
  ghc-options:         -threaded -O2

executable easy-nlp
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             EasyNlp.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && < 5
  ghc-options:         -threaded -O2

executable basic-nlp
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             BasicNlp.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       casadi-bindings,
                       base >=4.6 && < 5
  ghc-options:         -threaded -O2

executable beginner-qp
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples/beginner
  main-is:             SimpleQp.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5
  ghc-options:         -O2

executable dae-pendulum
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             DaePendulum.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       generic-accessors >= 0.1.0.0,
                       bytestring,
                       zeromq4-haskell,
--                       binary,
                       cereal,
                       vector
  ghc-options:         -threaded -O2

executable glider
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Glider.hs
  other-modules:       Glider.Aircraft
                       Glider.AeroCoeffs
                       Glider.Betty
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       containers,
                       linear,
                       bytestring,
--                       binary,
                       cereal,
                       vector,
                       generic-accessors >= 0.1.0.0,
                       zeromq4-haskell
  ghc-options:         -threaded -O2

executable sailboat
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Sailboat.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       containers,
                       linear,
                       bytestring,
--                       binary,
                       cereal,
                       vector,
                       semigroups,
                       generic-accessors >= 0.1.0.0,
                       zeromq4-haskell
  ghc-options:         -threaded -O2

executable dynoplot
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Dynoplot.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       containers,
                       vector,
                       cereal,
                       bytestring,
                       zeromq4-haskell,
                       Plot-ho-matic >= 0.5.0.0,
                       cmdargs
  ghc-options:         -O2 -with-rtsopts=-T

executable quadrature-test
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Quadrature.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       generic-accessors >= 0.1.0.0,
                       bytestring,
                       zeromq4-haskell,
--                       binary,
                       cereal,
                       vector
  ghc-options:         -threaded -O2

--test-suite lp_tests
--  type: exitcode-stdio-1.0
--  hs-source-dirs:      tests
--  main-is:             OldTests.hs
--  default-language:    Haskell2010
--  build-depends:       dynobud,
--                       vector,
--                       linear,
--                       hmatrix-glpk,
--                       QuickCheck >= 2,
--                       HUnit,
--                       test-framework,
--                       test-framework-hunit,
--                       test-framework-quickcheck2,
--                       base >=4.6 && < 5
--  ghc-options:         -O2

--test-suite old-unit-tests
--  type: exitcode-stdio-1.0
--  hs-source-dirs:      tests
--  main-is:             UnitTests.hs
--  default-language:    Haskell2010
--  build-depends:       dynobud,
--                       QuickCheck >= 2,
--                       HUnit,
--                       test-framework,
--                       test-framework-hunit,
--                       test-framework-quickcheck2,
--                       hmatrix,
--                       hmatrix-glpk,
--                       vector,
--                       linear,
--                       MemoTrie,
--                       base >=4.6 && < 5
----  ghc-options:         -O2

test-suite unit-tests
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             NewUnitTests.hs
  other-modules:       QuadratureTests
                       IntegrationTests
                       VectorizeTests
                       ViewTests
                       Utils
  default-language:    Haskell2010
  build-depends:       dynobud,
                       QuickCheck >= 2,
                       HUnit,
                       test-framework,
                       test-framework-hunit,
                       test-framework-quickcheck2,
                       vector,
                       linear,
                       binary,
                       cereal,
                       casadi-bindings,
                       hmatrix,
                       hmatrix-gsl,
                       base >=4.6 && < 5
  ghc-options:         -O2

test-suite doctests
  type:                exitcode-stdio-1.0
  main-is:             Doctests.hs
  build-depends:       base >= 4 && < 5,
                       doctest >= 0.8
  default-language:    Haskell2010
  ghc-options:         -threaded
  hs-source-dirs:      tests
